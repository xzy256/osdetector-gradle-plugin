申请一个sonatype帐号，地址https://issues.sonatype.org/secure/Signup!default.jspa

编译它的依赖包osdetector-gradle-plugin，下载地址https://github.com/google/osdetector-gradle-plugin (注意版本)  使用./gradlew install编译它出现错误
FAILURE: Build failed with an exception.

* Where:
Build file '/home/loongson/osdetector-gradle-plugin/build.gradle' line: 83

* What went wrong:
A problem occurred evaluating root project 'osdetector-gradle-plugin'.
> No such property: ossrhUsername for class: org.gradle.api.publication.maven.internal.ant.DefaultGroovyMavenDeployer

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.

BUILD FAILED

Total time: 2 mins 8.98 secs
---->这个问题见http://blog.csdn.net/maosidiaoxian/article/details/37562121下的maven相关问题，将文件/home/loongson/osdetector-gradle-plugin/build.gradle的83处相关的ossrhUsername ossrhPassword设置成null，又出现下面的错误
Caused by: org.gradle.api.InvalidUserDataException: Cannot perform signing task ':signArchives' because it has no configured sign...(大体是这样的错误)
---->在gradle.properties里配置下面的三个字段(根据具体情况修改)
    signing.keyId=24875D73      
    signing.password=secret  
    signing.secretKeyRingFile=/Users/me/.gnupg/secring.gpg  
使用命令$gpg --gen-key来产生签名，日记如下
	[root@localhost]# gpg --gen-key
	gpg (GnuPG) 1.4.18; Copyright (C) 2014 Free Software Foundation, Inc.
	This is free software: you are free to change and redistribute it.
	There is NO WARRANTY, to the extent permitted by law.

	gpg: 钥匙环‘/root/.gnupg/secring.gpg’已建立
	gpg: 钥匙环‘/root/.gnupg/pubring.gpg’已建立
	请选择您要使用的密钥种类：
	   (1) RSA and RSA (default)
	   (2) DSA and Elgamal
	   (3) DSA (仅用于签名)
	   (4) RSA (仅用于签名)
	您的选择？ 1
	RSA 密钥长度应在 1024 位与 4096 位之间。
	您想要用多大的密钥尺寸？(2048)
	您所要求的密钥尺寸是 2048 位
	请设定这把密钥的有效期限。
		     0 = 密钥永不过期
		  <n>  = 密钥在 n 天后过期
		  <n>w = 密钥在 n 周后过期
		  <n>m = 密钥在 n 月后过期
		  <n>y = 密钥在 n 年后过期
	密钥的有效期限是？(0) 0
	密钥永远不会过期
	以上正确吗？(y/n)y

	您需要一个用户标识来辨识您的密钥；本软件会用真实姓名、注释和电子邮件地址组合
	成用户标识，如下所示：
		“Heinrich Heine (Der Dichter) <heinrichh@duesseldorf.de>”

	真实姓名：xuezhiyou
	电子邮件地址：644351021@qq.com
	注释：用于osdetector-gradle-plugin使用
	您正在使用‘utf-8’字符集。
	您选定了这个用户标识：
		“xuezhiyou (用于osdetector-gradle-plugin使用) <644351021@qq.com>”

	更改姓名(N)、注释(C)、电子邮件地址(E)或确定(O)/退出(Q)？o
	您需要一个密码来保护您的私钥。

	我们需要生成大量的随机字节。这个时候您可以多做些琐事(像是敲打键盘、移动
	鼠标、读写硬盘之类的)，这会让随机数字发生器有更好的机会获得足够的熵数。

	随机字节不够多。请再做一些其他的琐事，以使操作系统能搜集到更多的熵！
	(还需要282字节)

	..+++++
	......+++++
	我们需要生成大量的随机字节。这个时候您可以多做些琐事(像是敲打键盘、移动
	鼠标、读写硬盘之类的)，这会让随机数字发生器有更好的机会获得足够的熵数。

	随机字节不够多。请再做一些其他的琐事，以使操作系统能搜集到更多的熵！
	(还需要67字节)
	+++++

	随机字节不够多。请再做一些其他的琐事，以使操作系统能搜集到更多的熵！
	(还需要83字节)
	.+++++
	gpg: /root/.gnupg/trustdb.gpg：建立了信任度数据库
	gpg: 密钥 947470C3 被标记为绝对信任
	公钥和私钥已经生成并经签名。

	gpg: 正在检查信任度数据库
	gpg: 需要 3 份勉强信任和 1 份完全信任，PGP 信任模型
	gpg: 深度：0 有效性：  1 已签名：  0 信任度：0-，0q，0n，0m，0f，1u
	pub   2048R/947470C3 2017-05-16
	密钥指纹 = 2EDD 4F8C B8C5 BB64 E992  457C 8A1C 228D 9474 70C3
	uid                  xuezhiyou (用于osdetector-gradle-plugin使用) <644351021@qq.com>
	sub   2048R/C0CE009F 2017-05-16
	[root@localhost] cd /root/.gnupg
	[root@localhost .gnupg]# ls
	pubring.gpg  pubring.gpg~  random_seed  secring.gpg  trustdb.gpg

修改gradle.properties文件如下
signing.keyId=947470C3
signing.password=xuezhiyou
signing.secretKeyRingFile=/root/.gnupg/secring.gpg

出现下面的错误
12:02:07.333 [ERROR] [org.gradle.BuildExceptionReporter] 
12:02:07.335 [ERROR] [org.gradle.BuildExceptionReporter] FAILURE: Build failed with an exception.
12:02:07.336 [ERROR] [org.gradle.BuildExceptionReporter] 
12:02:07.337 [ERROR] [org.gradle.BuildExceptionReporter] * What went wrong:
12:02:07.338 [ERROR] [org.gradle.BuildExceptionReporter] The key ID must be in a valid form (eg 00B5050F or 0x00B5050F), given value: 94064FFE      
12:02:07.339 [ERROR] [org.gradle.BuildExceptionReporter] 
12:02:07.341 [ERROR] [org.gradle.BuildExceptionReporter] * Try:
12:02:07.342 [ERROR] [org.gradle.BuildExceptionReporter] Run with --stacktrace option to get the stack trace. 
12:02:07.346 [LIFECYCLE] [org.gradle.BuildResultLogger] 
12:02:07.348 [LIFECYCLE] [org.gradle.BuildResultLogger] BUILD FAILED
12:02:07.349 [LIFECYCLE] [org.gradle.BuildResultLogger] 
12:02:07.350 [LIFECYCLE] [org.gradle.BuildResultLogger] Total time: 23.467 secs
---->打开gradle.properties，查看keyId，password，secretKeyRingFile后面有多余的空格，删除空格，继续编译，成功
